/**
 * CRISP Layout Classes
 * Semantic layout patterns with as- prefix
 */

/* Stack Layout - Vertical rhythm */
.as-stack {
  display: flex;
  flex-direction: column;
  gap: var(--stack-gap, var(--space-1-0));
}

.as-stack > * {
  margin-block: 0;
}

/* Grid Layout - Responsive grid */
.as-grid {
  display: grid;
  gap: var(--grid-gap, var(--space-1-0));
  grid-template-columns: repeat(
    auto-fit,
    minmax(var(--grid-min, 250px), 1fr)
  );
}

/* Fixed column variant */
.as-grid[style*="--grid-columns"] {
  grid-template-columns: repeat(var(--grid-columns), 1fr);
}

/* Cluster Layout - Flexible horizontal grouping */
.as-cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--cluster-gap, var(--space-0-5));
  align-items: var(--cluster-align, center);
  justify-content: var(--cluster-justify, flex-start);
}

/* Centre Layout - Perfect centring */
.as-centre {
  display: grid;
  place-items: center;
  min-height: var(--centre-height, 100vh);
  padding: var(--centre-padding, var(--space-1-5));
}

/* Container Layout - Constrained width */
.as-container {
  width: 100%;
  max-width: var(--container-width, var(--container-lg));
  margin-inline: auto;
  padding-inline: var(--container-padding, var(--space-1-5));
}

/* Sidebar Layout - Fixed/flexible columns */
.as-sidebar {
  display: flex;
  flex-wrap: wrap;
  gap: var(--sidebar-gap, var(--space-1-5));
}

.as-sidebar > :first-child {
  flex-basis: var(--sidebar-width, 250px);
  flex-grow: 1;
}

.as-sidebar > :last-child {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: var(--sidebar-content-min, 50%);
}

/* Cover Layout - Vertical centring with top/bottom */
.as-cover {
  display: flex;
  flex-direction: column;
  min-height: var(--cover-height, 100vh);
  padding: var(--cover-padding, 0);
}

.as-cover > * {
  margin-block: var(--cover-spacing, var(--space-1-0));
}

.as-cover > :first-child:not(.centred) {
  margin-block-start: 0;
}

.as-cover > :last-child:not(.centred) {
  margin-block-end: 0;
}

.as-cover > .centred {
  margin-block: auto;
}

/* Frame Layout - Aspect ratio container */
.as-frame {
  aspect-ratio: var(--frame-ratio, 16 / 9);
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.as-frame > * {
  width: 100%;
  height: 100%;
  object-fit: var(--frame-fit, cover);
}

/* Reel Layout - Horizontal scroll */
.as-reel {
  display: flex;
  gap: var(--reel-gap, var(--space-1-0));
  overflow-x: auto;
  scrollbar-width: thin;
  -webkit-overflow-scrolling: touch;
}

.as-reel > * {
  flex: 0 0 var(--reel-item-width, auto);
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .as-sidebar {
    flex-direction: column;
  }
  
  .as-grid {
    --grid-columns: 1;
  }
  
  .as-container {
    --container-padding: var(--space-1-0);
  }
}