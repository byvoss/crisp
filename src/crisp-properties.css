/**
 * CRISP Properties
 * Additional behaviours with with- prefix
 */

/* Shadow Property - GPU accelerated */
.with-shadow {
  position: relative;
  transform: translateZ(0);
}

.with-shadow::before {
  content: "";
  position: absolute;
  inset: 0;
  background: var(--shadow-colour, var(--colour-neutral-20));
  opacity: var(--shadow-opacity, 0.15);
  filter: blur(var(--shadow-blur, 8px));
  transform: translateY(var(--shadow-y, 4px)) 
             translateX(var(--shadow-x, 0)) 
             scale(var(--shadow-scale, 1));
  z-index: -1;
  border-radius: inherit;
  pointer-events: none;
}

/* Border Property */
.with-border {
  border: var(--border-width, 1px) 
          var(--border-style, solid) 
          var(--border-colour, var(--colour-neutral-90));
}

/* Padding Property */
.with-padding {
  padding: var(--padding, var(--space-1-5));
}

/* Margin Property */
.with-margin {
  margin: var(--margin, var(--space-1-0));
}

/* Interaction Property */
.with-interaction {
  cursor: pointer;
  transition: transform var(--transition-fast);
  will-change: transform;
}

.with-interaction:hover {
  transform: var(--interaction-hover, translateY(-2px));
}

.with-interaction:active {
  transform: var(--interaction-active, translateY(0));
}

/* Sticky Property */
.with-sticky {
  position: sticky;
  top: var(--sticky-top, 0);
  z-index: var(--sticky-z, 10);
}

/* Animation Property */
.with-animation {
  animation: var(--animation-name, none) 
             var(--animation-duration, var(--transition-base)) 
             var(--animation-timing, ease) 
             var(--animation-delay, 0s) 
             var(--animation-count, 1) 
             var(--animation-direction, normal) 
             var(--animation-fill, none);
}

/* Rounded Property */
.with-rounded {
  border-radius: var(--rounded, var(--radius-md));
}

/* Elevation Property Variants */
.with-elevation-sm {
  box-shadow: 0 1px 2px hsla(220, 10%, 20%, 0.1);
}

.with-elevation-md {
  box-shadow: 0 4px 6px hsla(220, 10%, 20%, 0.12);
}

.with-elevation-lg {
  box-shadow: 0 10px 15px hsla(220, 10%, 20%, 0.15);
}

/* Backdrop Property */
.with-backdrop {
  backdrop-filter: var(--backdrop-filter, blur(10px));
  background: var(--backdrop-bg, hsla(255, 255%, 255%, 0.8));
}

/* Scrollable Property */
.with-scrollable {
  overflow: var(--scroll-direction, auto);
  max-height: var(--scroll-height, 100%);
  scrollbar-width: thin;
  -webkit-overflow-scrolling: touch;
}

/* Truncate Property */
.with-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Line Clamp Property */
.with-clamp {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: var(--clamp-lines, 3);
  overflow: hidden;
}

/* Gradient Property */
.with-gradient {
  background: linear-gradient(
    var(--gradient-angle, 135deg),
    var(--gradient-start, var(--colour-primary-50)),
    var(--gradient-end, var(--colour-primary-70))
  );
}

/* Overlay Property */
.with-overlay {
  position: relative;
}

.with-overlay::after {
  content: "";
  position: absolute;
  inset: 0;
  background: var(--overlay-colour, hsla(0, 0%, 0%, 0.5));
  pointer-events: none;
}

/* State Properties */
.with-loading {
  position: relative;
  pointer-events: none;
  opacity: 0.7;
}

.with-loading::after {
  content: "";
  position: absolute;
  inset: 50%;
  width: var(--loading-size, 1.5rem);
  height: var(--loading-size, 1.5rem);
  margin: calc(var(--loading-size, 1.5rem) / -2);
  border: 2px solid transparent;
  border-top-color: var(--loading-colour, currentColor);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Focus Trap Property */
.with-focus-trap:focus-within {
  outline: 2px solid var(--colour-primary-50);
  outline-offset: 4px;
}